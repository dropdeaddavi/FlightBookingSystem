{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\nexport class MemberService {\n  constructor(http) {\n    this.http = http;\n    this.FlightUrl = 'https://localhost:7216/flight';\n  }\n  GetAllMembers() {\n    return this.http.get(this.FlightUrl);\n  }\n}\nMemberService.ɵfac = function MemberService_Factory(t) {\n  return new (t || MemberService)(i0.ɵɵinject(i1.HttpClient));\n};\nMemberService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: MemberService,\n  factory: MemberService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAAqBA,WAAW,QAAQ,sBAAsB;;;AAI9D,MAAMC,WAAW,GAAG;EAClBC,OAAO,EAAE,IAAIF,WAAW,CAAC;IAAE,cAAc,EAAE;EAAkB,CAAE;CAChE;AAKD,OAAM,MAAOG,aAAa;EAExBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IADhB,cAAS,GAAG,+BAA+B;EACX;EAExCC,aAAa;IACX,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAgB,IAAI,CAACC,SAAS,CAAC;EACrD;;AANWL,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;SAAbA,aAAa;EAAAM,SAAbN,aAAa;EAAAO,YAFZ;AAAM","names":["HttpHeaders","httpOptions","headers","MemberService","constructor","http","GetAllMembers","get","FlightUrl","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\civim\\source\\repos\\FlightBookingSystem\\FlightBookingSystem\\ClientApp\\src\\services\\member.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { MemberModel } from \"../models/member-model\";\nimport { Observable } from 'rxjs';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MemberService {\n  private FlightUrl = 'https://localhost:7216/flight';\n  constructor(private http: HttpClient) { }\n\n  GetAllMembers(): Observable<MemberModel[]> {\n    return this.http.get<MemberModel[]>(this.FlightUrl)\r\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}